import yaml

def create_world_file(yaml_file_path, world_file_path):
    with open(yaml_file_path, 'r') as yaml_file:
        data = yaml.safe_load(yaml_file)

    world_file = open(world_file_path, 'w')
    world_file.write('<?xml version="1.0"?>\n')
    world_file.write('<sdf version="1.5">\n')
    world_file.write('  <world name="default">\n')
    world_file.write('    <include>\n')
    world_file.write('      <uri>model://ground_plane</uri>\n')
    world_file.write('    </include>\n')
    world_file.write('    <include>\n')
    world_file.write('      <uri>model://sun</uri>\n')
    world_file.write('    </include>\n')

    for i in range(data['num_obstacles']):
        world_file.write('    <model name="obstacle{}">\n'.format(i))
        world_file.write('      <pose>{} {} {} 0 0 0</pose>\n'.format(data['obstacles'][i]['x'], data['obstacles'][i]['y'], 0))
        world_file.write('      <static>true</static>\n')
        world_file.write('      <link name="link">\n')
        world_file.write('        <collision name="collision">\n')
        world_file.write('          <geometry>\n')
        world_file.write('            <cylinder>\n')
        world_file.write('              <radius>{}</radius>\n'.format(data['obstacles'][i]['r']))
        world_file.write('              <length>5</length>\n')
        world_file.write('            </cylinder>\n')
        world_file.write('          </geometry>\n')
        world_file.write('        </collision>\n')
        world_file.write('        <visual name="visual">\n')
        world_file.write('          <geometry>\n')
        world_file.write('            <cylinder>\n')
        world_file.write('              <radius>{}</radius>\n'.format(data['obstacles'][i]['r']))
        world_file.write('              <length>5</length>\n')
        world_file.write('            </cylinder>\n')
        world_file.write('          </geometry>\n')
        world_file.write('          <material>\n')
        world_file.write('            <script>\n')
        world_file.write('              <uri>file://media/materials/scripts/gazebo.material</uri>\n')
        world_file.write('              <name>Gazebo/White</name>\n')
        world_file.write('            </script>\n')
        world_file.write('          </material>\n')
        world_file.write('        </visual>\n')
        world_file.write('      </link>\n')
        world_file.write('    </model>\n')

    
    world_file.write('    <plugin name="ros_interface_plugin" filename="librotors_gazebo_ros_interface_plugin.so"/>\n')

    world_file.write('    <spherical_coordinates>\n')
    world_file.write('    <surface_model>EARTH_WGS84</surface_model>\n')
    world_file.write('    <latitude_deg>47.3667</latitude_deg>\n')
    world_file.write('    <longitude_deg>8.5500</longitude_deg>\n')
    world_file.write('    <elevation>500.0</elevation>\n')
    world_file.write('    <heading_deg>0</heading_deg>\n')
    world_file.write('    </spherical_coordinates>\n')
    world_file.write("    <physics type='ode'>\n")
    world_file.write('    <ode>\n')
    world_file.write('        <solver>\n')
    world_file.write('        <type>quick</type>\n')
    world_file.write('        <iters>1000</iters>\n')
    world_file.write('        <sor>1.3</sor>\n')
    world_file.write('        </solver>\n')
    world_file.write('        <constraints>\n')
    world_file.write('        <cfm>0</cfm>\n')
    world_file.write('        <erp>0.2</erp>\n')
    world_file.write('        <contact_max_correcting_vel>100</contact_max_correcting_vel>\n')
    world_file.write('        <contact_surface_layer>0.001</contact_surface_layer>\n')
    world_file.write('        </constraints>\n')
    world_file.write('    </ode>\n')
    world_file.write('    <max_step_size>0.01</max_step_size>\n')
    world_file.write('    <real_time_factor>1</real_time_factor>\n')
    world_file.write('    <real_time_update_rate>100</real_time_update_rate>\n')
    world_file.write('    <gravity>0 0 -9.8</gravity>\n')
    world_file.write('    </physics>\n')
    world_file.write('  </world>\n')
    world_file.write('</sdf>\n')
    world_file.close()

create_world_file('../config/cylinder_gen.yaml', '../worlds/cylinder_gen.world')